name: CI/CD com Django e PostgreSQL

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - develop
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' 

    - name: Instalar Flake8
      run: pip install flake8

    - name: Executar Flake8 Lint
      run: flake8 .
      env:
        FLAKE8_CONFIG: .flake8

    - name: Configurar .env para CI
      run: |
        echo "POSTGRES_USER=testuser" >> .env
        echo "POSTGRES_DB=testdb" >> .env
        echo "POSTGRES_PASSWORD=testpassword" >> .env
        echo "DB_PORT=5432" >> .env
        echo "ACCESS_TIME=3600" >> .env
        echo "REFRESH_TIME=86400" >> .env
        echo "DEBUG=True" >> .env
        echo "RABBITMQ_DEFAULT_USER=default_rabbit" >> .env
        echo "RABBITMQ_DEFAULT_PASS=default_pass" >> .env
        echo "RABBITMQ_DEFAULT_VHOST=/" >> .env


    - name: redes para o docker
      run: |
        docker network create rabbit-MQ-extern-network
        docker network create gateway-shared-net

    - name: Garantir pasta backups com permissões
      run: mkdir -p backups && chmod -R 777 backups


    - name: build docker
      run: docker compose up --build -d --wait

    - name: Obter logs do DB se a inicialização falhou
      if: failure()
      run: |
        echo "Iniciando coleta de logs do profilesdashboard-db..."
        docker compose logs profilesdashboard-db
        echo "Coleta de logs concluída."

    - name: Parar e remover Docker Compose
      if: always()
      run: docker compose down